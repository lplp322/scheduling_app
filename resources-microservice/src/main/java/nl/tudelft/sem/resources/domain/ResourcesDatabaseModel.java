package nl.tudelft.sem.resources.domain;

import java.util.Objects;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import lombok.Setter;
import nl.tudelft.sem.common.models.request.ResourcesModel;

import javax.persistence.Column;
import javax.persistence.Embeddable;

@Setter
@Getter
@Embeddable
@NoArgsConstructor
public class ResourcesDatabaseModel {
    @Column(name = "cpu_resources")
    private int cpu;

    @Column(name = "gpu_resources")
    private int gpu;

    @Column(name = "memory_resources")
    private int ram;

    /**
     * Creates a new resources object.
     *
     * @param cpu CPU resources
     * @param gpu GPU resources
     * @param ram memory resources
     */
    public ResourcesDatabaseModel(int cpu, int gpu, int ram) {
        this.cpu = cpu;
        this.gpu = gpu;
        this.ram = ram;
    }

    /**
     * Creates a new resources object from a resources model.
     *
     * @param resourcesModel resources model
     */
    public ResourcesDatabaseModel(@NonNull ResourcesModel resourcesModel) {
        this(resourcesModel.getCpu(), resourcesModel.getGpu(), resourcesModel.getRam());
    }

    /**
     * Function to transfer ResourcesDatabaseModel into ResourcesModel.
     *
     * @return new ResourcesModel object
     */
    public ResourcesModel toResourcesModel() {
        return new ResourcesModel(this.cpu, this.gpu, this.ram);
    }

    /**
     * Auto generated equals method.
     *
     * @param o - object to compare
     * @return true if they are equal
     */
    @Override
    public boolean equals(Object o) {
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ResourcesDatabaseModel that = (ResourcesDatabaseModel) o;
        return cpu == that.cpu && gpu == that.gpu && ram == that.ram;
    }

    /**
     * Autogenerated hashcode function.
     *
     * @return hashcode
     */
    @Override
    public int hashCode() {
        return Objects.hash(cpu, gpu, ram);
    }
}
